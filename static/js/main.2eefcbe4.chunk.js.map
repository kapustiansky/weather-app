{"version":3,"sources":["utils/compose.js","components/city-list-item/city-list-item.js","components/city-list-item/index.js","components/weather-service-context/weather-service-context.js","components/hoc/with-weather-service.js","actions/index.js","components/spinner/index.js","components/spinner/spinner.js","components/city-add-form/city-add-form.js","components/city-add-form/index.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/city-list/city-list.js","components/city-list/index.js","components/pages/home-page.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/weather-service.js","reducers/index.js","store.js","index.js"],"names":["compose","funcs","comp","reduceRight","wrapped","f","useStyles","makeStyles","root","maxWidth","background","margin","boxShadow","minMax","width","bg","fontFamily","buttons","paddingTop","justifyContent","fontTemp","fontSize","fontCity","CityListItem","cityData","deleteCityItem","name","t","feels_like","temp_min","temp_max","icon","classes","Card","className","CardContent","Box","display","alignItems","src","alt","Typography","variant","component","CardActions","Button","size","IconButton","onClick","newStorageArr","JSON","parse","localStorage","getItem","filter","item","id","payload","setItem","stringify","aria-label","React","createContext","WeatherServiceProvider","Provider","WeatherServiceConsumer","Consumer","withWeatherService","Wrapped","props","weatherService","fetchCitis","dispatch","type","getCityData","then","data","catch","err","Spinner","theme","createMuiTheme","palette","primary","main","citisArray","API_KAY","CityAddForm","state","value","onSubmit","e","preventDefault","cityValue","split","setState","URL","fetch","response","status","json","Error","temp","iconData","weather","cityWeather","Math","trunc","push","setTimeout","onAddedNewCiy","alert","message","onChange","target","this","ThemeProvider","form","TextField","input","label","color","Component","withStyles","connect","city","newCityItem","cityItemAdded","ErrorIndicator","CityList","Grid","container","spacing","justify","map","xs","sm","lg","style","padding","CityListContainer","loading","error","HomePege","CartPage","App","path","exact","ErrorBoundry","hasError","children","WeatherService","arr","pushData","getWeatherData","Promise","resolve","reject","initialState","reducer","action","eventId","newArr","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2eefcbe4.chunk.js","sourcesContent":["const compose = (...funcs) => (comp) => {\n  return funcs.reduceRight(\n    (wrapped, f) => f(wrapped), comp);\n};\n\nexport default compose;\n","import React from 'react';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport { \r\n\tmakeStyles, \r\n\tCard, \r\n\tCardActions, \r\n\tCardContent, \r\n\tButton, \r\n\tTypography, \r\n\tBox, \r\n\tIconButton\r\n} from '@material-ui/core';\r\n//import AutorenewIcon from '@material-ui/icons/Autorenew';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n\t  maxWidth: 250,\r\n\t  background: \r\n\t  \t'linear-gradient(0deg, rgb(255 255 255 / 0%) 0%, #f7f7f7 50%, rgb(255 255 255 / 0%) 100%)',\r\n\t  margin: 'auto',\r\n\t  boxShadow: 'none',\r\n\t},\r\n\tminMax: {\r\n\t\twidth: '60%',\r\n\t},\r\n\tbg: {\r\n\t\tfontFamily: `'Merriweather', serif`\r\n\t},\r\n\tbuttons: {\r\n\t\tpaddingTop: 0,\r\n\t\tjustifyContent: 'space-between'\r\n\t},\r\n\tfontTemp: {\r\n\t\tfontSize: 60,\r\n\t  ['@media (max-width:960px)']: { // eslint-disable-line no-useless-computed-key\r\n\t\tfontSize: 45\r\n\t  },\r\n\t},\r\n\tfontCity: {\r\n\t\tfontSize: 24,\r\n\t  ['@media (max-width:960px)']: { // eslint-disable-line no-useless-computed-key\r\n\t\tfontSize: 20\r\n\t  },\r\n\t  fontFamily: `'Roboto Slab', serif`\r\n\t}\r\n  });\r\n\r\nconst CityListItem = ({cityData, deleteCityItem}) => {\r\n\tconst { name, t, feels_like, temp_min, temp_max, icon } = cityData;\r\n\tconst classes = useStyles();\r\n\r\n\tconst deleteItem = () => {\r\n\t\tconst storageArr = JSON.parse(localStorage.getItem('citisData'));\r\n\t\tconst newStorageArr = storageArr.filter((item) => item.id !== deleteCityItem().payload);\r\n\t\tlocalStorage.setItem('citisData', JSON.stringify(newStorageArr));\t\t\r\n\t\t//return deleteCityItem;\r\n\t}\t\r\n    return (\r\n\t\t<Card className={classes.root}>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"space-evenly\" alignItems=\"center\">\r\n\t\t\t\t\t\t<img src={`https://openweathermap.org/img/w/${icon}.png`} alt='Icon current weather'/>\r\n\t\t\t\t\t\t<Typography className={classes.fontTemp} variant=\"h2\">\r\n\t\t\t\t\t\t\t{t}&#8451;\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Typography className={classes.bg} variant=\"subtitle2\">\r\n\t\t\t\t\t\tFeels Like:  {feels_like}&#8451;\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Typography className={classes.fontCity} variant=\"h5\" component=\"h1\">\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\" className={classes.minMax}>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\" className={classes.bg}>\r\n\t\t\t\t\t\tmin: {temp_min}&#8451;\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\" className={classes.bg}>\r\n\t\t\t\t\t\tmax: {temp_max}&#8451;\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardActions className={classes.buttons}>\r\n\t\t\t\t<Button size=\"small\">Learn More</Button>\r\n\t\t\t\t<IconButton onClick={deleteItem} aria-label=\"delete\" size=\"small\">\r\n\t\t\t\t\t<HighlightOffIcon fontSize=\"small\"/>\r\n        \t\t</IconButton>\r\n\t\t\t</CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CityListItem;","import CityListItem from './city-list-item';\r\n\r\nexport default CityListItem;","import React from 'react';\r\n\r\nconst {\r\n\tProvider: WeatherServiceProvider,\r\n\tConsumer: WeatherServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n\tWeatherServiceProvider,\r\n\tWeatherServiceConsumer\r\n};","import React from 'react';\r\nimport { WeatherServiceConsumer } from '../weather-service-context';\r\n\r\nconst withWeatherService = () => (Wrapped) => {\r\n\r\n\treturn (props) => {\r\n\t\treturn (\r\n\t\t\t<WeatherServiceConsumer>\r\n\t\t\t\t{\r\n\t\t\t\t\t(weatherService) => {\r\n\t\t\t\t\t\treturn (<Wrapped {...props}\r\n\t\t\t\t\t\t\tweatherService={weatherService}/>);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t</WeatherServiceConsumer>\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default withWeatherService;","const cityLoaded = (newCity) => {\r\n\treturn {\r\n\t\ttype: 'FETCH_CITY_LOADED',\r\n\t\tpayload: newCity\r\n\t};\r\n};\r\n\r\nconst cityRequested = () => {\r\n\treturn {\r\n\t\ttype: 'FETCH_CITY_REQUESTED'\r\n\t}\r\n};\r\n\r\nconst cityError = (error) => {\r\n\treturn {\r\n\t\ttype: 'FETCH_CITY_FAILURE',\r\n\t\tpayload: error\r\n\t}\r\n}\r\n\r\nconst fetchCitis = (weatherService, dispatch) => () => {\r\n\tdispatch(cityRequested());\r\n\tweatherService.getCityData()\r\n\t\t.then((data) => dispatch(cityLoaded(data)))\r\n\t\t.catch((err) => dispatch(cityError(err)));\r\n}\r\n\r\nexport const cityItemAdded = (newCityItem) => {\r\n\treturn {\r\n\t\ttype: 'ITEM_ADDED_TO_CITY',\r\n\t\tpayload: newCityItem\r\n\t};\r\n};\r\n\r\nexport const deleteItem = (deleteId) => {\r\n\treturn {\r\n\t\ttype: 'ITEM_CITY_DELETE',\r\n\t\tpayload: deleteId\r\n\t};\r\n};\r\n\r\nexport {\r\n\tfetchCitis\r\n};","import Spinner from './spinner';\n\nexport default Spinner;\n","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n\treturn <div>Loading...</div>\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { compose } from '../../utils';\r\nimport { cityItemAdded } from '../../actions';\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: '#afafaf',\r\n\t\t},\r\n  }})\r\n\r\nconst styles = {\r\n    form: {\r\n\t  display: 'flex',\r\n\t  justifyContent: 'center'\r\n\t},\r\n\tinput: {\r\n\t\twidth: '70%'\r\n\t}\r\n  }\r\n\r\nconst citisArray = localStorage.getItem('citisData') ? JSON.parse(localStorage.getItem('citisData')) : [];\r\nconst API_KAY = '9db1d496a91bad902ebeff185ff91bdf';\r\n\r\nclass CityAddForm extends Component {\r\n\tstate = {\r\n\t\tvalue: '',\r\n\t  }\t  \r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst value  = this.state.value;\r\n\t\tconst cityValue = value.split(',')[0];\r\n\r\n\t\tthis.setState({\r\n\t\t\tvalue: '',\r\n\t\t  });\r\n\r\n\t\tconst URL =\r\n\t\t\t`https://api.openweathermap.org/data/2.5/weather?q=${cityValue}&appid=${API_KAY}&units=metric`;\r\n\r\n  \t\tfetch(URL)\r\n\t\t\t.then((response) => {\r\n\r\n\t\t\t\tif(response.status === 200) {\t\t\t\t\t\t\r\n\t\t\t\t\treturn response.json();\r\n\r\n\t\t\t\t} else if(response.status === 404) {\r\n\t\t\t\t\tthrow new Error(\"Нет данных по вашему городу! Проверьте правильность ввода.\");\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"Что-то пошло не так, попробуйте еще раз.\");\r\n\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t.then((data) => {\t\t\t\r\n\t\t\t\tconst { id, name, main: { feels_like, temp, temp_max, temp_min }, weather: [iconData] } = data;\r\n\t\t\t\tconst cityWeather = {\r\n\t\t\t\t\tid: id,\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\tt: Math.trunc(temp),\r\n\t\t\t\t\tfeels_like: Math.trunc(feels_like),\r\n\t\t\t\t\ttemp_min: Math.trunc(temp_min),\r\n\t\t\t\t\ttemp_max: Math.trunc(temp_max),\r\n\t\t\t\t\ticon: iconData.icon\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcitisArray.push({\r\n\t\t\t\t\tid: cityWeather.id,\r\n\t\t\t\t\tname: cityWeather.name,\r\n\t\t\t\t});\r\n\t\t\t\tlocalStorage.setItem('citisData', JSON.stringify(citisArray));\r\n\t\t\t\t\r\n\t\t\t\tsetTimeout(this.props.onAddedNewCiy(cityWeather), 400);\r\n\t\t\t\t})\r\n\t\t\t.catch((err) => alert(err.message))\r\n\t}\r\n\t  \r\n\tonChange = (e) => {\r\n        this.setState({\r\n        \tvalue: e.target.value\r\n        });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\t\t\t\r\n\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t<form onSubmit={this.onSubmit} className={classes.form}>\r\n\t\t\t\t\t<TextField onChange={this.onChange} value={this.state.value} className={classes.input} label=\"You City\" color=\"primary\"/>\r\n\t\t\t\t\t<Button type=\"submit\"  size=\"small\">Add City</Button>\r\n\t\t\t\t</form>\r\n\t\t\t</ThemeProvider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapSrateToProps = ({ city }) => {\r\n    return { city }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\t\tonAddedNewCiy: (newCityItem) => dispatch(cityItemAdded(newCityItem))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n\twithStyles(styles),\r\n\tconnect(mapSrateToProps, mapDispatchToProps)\r\n)(CityAddForm);","import CityAddForm from './city-add-form';\r\n\r\nexport default CityAddForm;","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;","import React from 'react';\r\nimport CityAddForm from '../city-add-form';\r\n\r\nconst ErrorIndicator = () => {\r\n\treturn ( \r\n\t\t<>\r\n\t\t\t<div> Error </div> \r\n\t\t\t<CityAddForm />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ErrorIndicator;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { compose } from '../../utils';\r\nimport CityListItem from '../city-list-item';\r\nimport { withWeatherService } from '../hoc';\r\nimport { fetchCitis, deleteItem } from '../../actions';\r\nimport Spinner from '../spinner';\r\nimport CityAddForm from '../city-add-form';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nconst CityList = ({ city, deleteCityItem }) => {\r\n    return ( \r\n        <Grid container spacing={2} justify=\"center\">\r\n            {\r\n                city.map((cityData) => {    \r\n                \treturn (\r\n                \t    <Grid key={cityData.id} item xs={6} sm={3} lg={2}>\r\n                \t        <CityListItem cityData={cityData} deleteCityItem={() => deleteCityItem(cityData.id)}/>\r\n                \t    </Grid>\r\n                \t);\r\n                })\r\n            }\r\n            <Grid style={{ padding: 20 }} item xs={12}>\r\n                <CityAddForm />\r\n            </Grid>\r\n        </Grid>   \r\n    )\r\n}\r\nclass CityListContainer extends Component {\r\n\tcomponentDidMount() {\r\n        this.props.fetchCitis();\r\n\t}\r\n\r\n    render() {\r\n        const { city, loading, error, deleteCityItem } = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner />;\r\n        }\r\n\r\n        if (error) {\r\n            return <ErrorIndicator />;\r\n        }\r\n\r\n        return <CityList city={city} deleteCityItem={deleteCityItem}/>\r\n    }\r\n}\r\n\r\nconst mapSrateToProps = ({ city, loading, error }) => {\r\n    return { city, loading, error }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, { weatherService }) => {\r\n    return {\r\n        fetchCitis: fetchCitis(weatherService, dispatch),\r\n        deleteCityItem: (id) => dispatch(deleteItem(id))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n\twithWeatherService(),\r\n\tconnect(mapSrateToProps, mapDispatchToProps)\r\n)(CityListContainer);","import CityList from './city-list';\r\n\r\nexport default CityList;","import React from 'react';\r\nimport CityList from '../city-list';\r\n\r\nconst HomePege = () => {\r\n    return (\r\n        <CityList />\r\n    )\r\n}\r\n\r\nexport default HomePege;","import React from 'react';\r\n\r\nconst CartPage = () => {\r\n    return <div>CartPage</div>\r\n}\r\n\r\nexport default CartPage;","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { HomePege, CartPage } from '../pages';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <Switch>\r\n\t\t\t<Route\r\n\t\t\tpath=\"/\"\r\n\t\t\tcomponent={HomePege}\r\n\t\t\texact />\r\n\r\n\t\t\t<Route\r\n\t\t\tpath=\"/cart\"\r\n\t\t\tcomponent={CartPage} />\t\r\n\t\t</Switch>\r\n    );\r\n};\r\n\r\nexport default App;","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\nclass ErroBoundry extends Component {\r\n\tstate = {\r\n\t\thasError: false\r\n\t}\r\n\r\n\tcomponentDidCatch() {\r\n\t\tthis.setState({\r\n\t\t\thasError: true\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <ErrorIndicator /> \r\n\t\t}\r\n\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErroBoundry;","class WeatherService {\r\n\tgetWeatherData() {\r\n\t\tconst arr = [];\r\n\r\n\t\tif (localStorage.getItem('citisData')) {\r\n\t\t\tconst citisArray = JSON.parse(localStorage.getItem('citisData'));\r\n\t\t\tcitisArray.map((item) => {\r\n\t\t\t\tconst API_KAY = '9db1d496a91bad902ebeff185ff91bdf';\r\n\t\t\t\tconst URL =\r\n\t\t\t\t`https://api.openweathermap.org/data/2.5/weather?q=${item.name}&appid=${API_KAY}&units=metric`;\r\n\r\n\t\t\t\tfetch(URL)\r\n\t\t\t\t\t.then((response) => {\r\n\r\n\t\t\t\t\t\tif(response.status !== 200) {\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthrow new Error(\"Что-то пошло не так! Перезагрузите страницу.\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn response.json();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((data) => {\t\t\t\r\n\t\t\t\t\t\tconst { id, name, main: { feels_like, temp, temp_max, temp_min }, weather: [iconData] } = data;\r\n\t\t\t\t\t\tconst cityWeather = {\r\n\t\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\t\tt: Math.trunc(temp),\r\n\t\t\t\t\t\t\tfeels_like: Math.trunc(feels_like),\r\n\t\t\t\t\t\t\ttemp_min: Math.trunc(temp_min),\r\n\t\t\t\t\t\t\ttemp_max: Math.trunc(temp_max),\r\n\t\t\t\t\t\t\ticon: iconData.icon\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tarr.push(cityWeather);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err)  =>  {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (err.message === \"Что-то пошло не так! Перезагрузите страницу.\") {\r\n\t\t\t\t\t\t\talert(err.message)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthrow err;\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t})\r\n\t\t\t});\t\r\n\t\t\treturn arr;\r\n\t\t} else {\r\n\t\t\treturn arr;\r\n\t\t}\r\n\t}\r\n\r\n\tgetCityData() {\r\n\t\tconst pushData = this.getWeatherData();\t\t\r\n\t\treturn (\r\n\t\t\tnew Promise((resolve, reject) => {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tresolve(pushData);\r\n\t\t\t\t\t} catch {\r\n\t\t\t\t\t\treject(new Error('Что-то пошло не так!!!'))\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 400);\t\t\t\t\r\n\t\t\t})\r\n\t\t\t// async () => {\r\n\t\t\t// \tawait new Promise((resolve) => {\r\n\t\t\t// \t\t\tresolve(pushData);\t\t\t\t\r\n\t\t\t// })\r\n\t\t\t// }\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default WeatherService;\r\n","const initialState = {\r\n\tcity: [],\r\n\tloading: true,\r\n\terror: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\t\r\n\t//console.log(action.type)\r\n\tswitch (action.type) {\r\n\t\tcase 'FETCH_CITY_REQUESTED':\r\n\t\t\treturn {\r\n\t\t\t\tcity: [],\r\n\t\t\t\tloading: true,\r\n\t\t\t\terror: null\r\n\t\t\t};\r\n\t\tcase 'FETCH_CITY_LOADED':\r\n\t\t\treturn {\r\n\t\t\t\tcity: action.payload,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: null\r\n\t\t\t};\r\n\t\tcase 'FETCH_CITY_FAILURE':\r\n\t\t\treturn {\r\n\t\t\t\tcity: [],\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload\r\n\t\t\t};\r\n\t\tcase 'ITEM_ADDED_TO_CITY':\r\n\t\t\tconst newCityItem = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcity: [\r\n\t\t\t\t\t...state.city,\r\n\t\t\t\t\tnewCityItem\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\tcase 'ITEM_CITY_DELETE':\r\n\t\t\tconst eventId = action.payload;\r\n\t\t\tconst newArr = state.city.filter((item) => item.id !== eventId)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcity: newArr\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport WeatherService from './services/weather-service';\nimport { WeatherServiceProvider } from './components/weather-service-context';\n\nimport store from './store';\nimport './index.css';\n\nconst weatherService = new WeatherService();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<ErrorBoundry>\n\t\t\t<WeatherServiceProvider value={weatherService}>\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<App />\n\t\t\t\t</HashRouter>\n\t\t\t</WeatherServiceProvider>\n\t\t</ErrorBoundry>\n\t</Provider>,\n\n\tdocument.getElementById('root')\n  );"],"sourceRoot":""}