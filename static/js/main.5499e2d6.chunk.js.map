{"version":3,"sources":["utils/compose.js","components/weather-service-context/weather-service-context.js","components/hoc/with-weather-service.js","actions/index.js","components/city-list-item/city-list-item.js","components/city-list-item/index.js","components/spinner/spinner.js","components/spinner/index.js","components/city-add-form/city-add-form.js","components/city-add-form/index.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/city-list/city-list.js","components/city-list/index.js","components/pages/home-page.js","assets/icons/Humidity.svg","assets/icons/Pressure.svg","assets/icons/Wind.svg","components/my-city-current/my-city-current.js","components/my-city-current/index.js","components/my-city-hourly/my-city-hourly.js","components/my-city-hourly/index.js","components/my-city-daily/my-city-daily.js","components/my-city-daily/index.js","components/my-city-header/my-city-header.js","components/my-city-header/index.js","components/my-city-container/my-city-container.js","components/my-city-container/index.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/weather-service.js","reducers/index.js","store.js","index.js"],"names":["compose","funcs","comp","reduceRight","wrapped","f","React","createContext","WeatherServiceProvider","Provider","WeatherServiceConsumer","Consumer","withWeatherService","Wrapped","props","weatherService","fetchCitis","dispatch","type","getCityData","then","data","payload","catch","err","fetchMyWeather","getMyWeather","fetchMyWeatherRefresh","useStyles","makeStyles","card","maxWidth","background","margin","boxShadow","opacity","animation","transform","boxMinMaxTemp","width","typogrMinMaxTemp","fontFamily","buttons","paddingTop","justifyContent","typogrTemp","fontSize","typogrCityName","CityListItem","connect","myCityWeather","loading","fetchMyCityWeather","cityData","deleteCityItem","coord","name","t","feels_like","temp_min","temp_max","icon","classes","Card","className","CardContent","Box","display","alignItems","src","alt","Typography","variant","bg","component","CardActions","to","onClick","sessionStData","sessionStorage","setItem","JSON","stringify","Button","size","IconButton","newLocalStArr","parse","localStorage","getItem","filter","item","id","aria-label","theme","createMuiTheme","palette","primary","main","root","marginTop","spacing","Spinner","ThemeProvider","LinearProgress","color","CityAddForm","handleChange","address","setState","handleSelect","onAddedNewCiy","state","this","value","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","form","box","TextField","label","input","map","suggestion","active","style","cursor","transition","span","description","placeId","button","Component","withStyles","marginBottom","height","padding","city","getCityItem","ErrorIndicator","gridCont","CityList","Grid","container","xs","sm","lg","CityListContainer","fetchCityFun","error","HomePege","hr","borderColor","fontTypogr","MyCityCurrent","current","humidity","pressure","temp","iconData","weather","wind_speed","Math","trunc","textAlign","Wind","Pressure","Humidity","boxCont","overflowX","typogrTime","MyCityHourly","hourly","data24","slice","hourlyData","index","fullDate","Date","dt","hours","getHours","minutes","getMinutes","currentTime","gridItem","flexDirection","borderRadius","typography","fontWeight","typogrDescr","MyCityDaily","daily","justify","dailyWeather","month","getMonth","date","getDate","currentDate","morn","night","h2","MyCityHeader","onRefresh","myCityName","MyCityContainer","myWeather","gridContainer","md","gridItem1","gridItem2","CartPage","App","path","exact","ErrorBoundry","hasError","children","WeatherService","SH_ST","URL","lat","lon","fetch","response","json","newCityItem","citisArray","cityValue","split","cityWeather","push","Error","alert","message","arr","status","Promise","resolve","reject","setTimeout","initialState","reducer","action","eventId","newArr","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5499e2d6.chunk.js","sourcesContent":["const compose = (...funcs) => (comp) => {\n\treturn funcs.reduceRight((wrapped, f) => f(wrapped), comp);\n};\n\nexport default compose;\n","import React from 'react';\r\n\r\nconst { Provider: WeatherServiceProvider, Consumer: WeatherServiceConsumer } = React.createContext();\r\n\r\nexport { WeatherServiceProvider, WeatherServiceConsumer };\r\n","import React from 'react';\r\nimport { WeatherServiceConsumer } from '../weather-service-context';\r\n\r\nconst withWeatherService = () => (Wrapped) => {\r\n\treturn (props) => {\r\n\t\treturn (\r\n\t\t\t<WeatherServiceConsumer>\r\n\t\t\t\t{(weatherService) => {\r\n\t\t\t\t\treturn <Wrapped {...props} weatherService={weatherService} />;\r\n\t\t\t\t}}\r\n\t\t\t</WeatherServiceConsumer>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default withWeatherService;\r\n","const cityLoaded = (city) => {\r\n\treturn {\r\n\t\ttype: 'FETCH_CITY_LOADED',\r\n\t\tpayload: city,\r\n\t};\r\n};\r\n\r\nconst cityRequested = () => {\r\n\treturn {\r\n\t\ttype: 'FETCH_CITY_REQUESTED',\r\n\t};\r\n};\r\n\r\nconst cityError = (error) => {\r\n\treturn {\r\n\t\ttype: 'FETCH_CITY_FAILURE',\r\n\t\tpayload: error,\r\n\t};\r\n};\r\n\r\nconst cityAdded = (newCity) => {\r\n\treturn {\r\n\t\ttype: 'ADD_TO_CITY_LIST',\r\n\t\tpayload: newCity,\r\n\t};\r\n};\r\n\r\nconst cityDelete = (deleteId) => {\r\n\treturn {\r\n\t\ttype: 'DELETE_ON_CITY_LIST',\r\n\t\tpayload: deleteId,\r\n\t};\r\n};\r\n\r\nconst fetchCitis = (weatherService, dispatch) => () => {\r\n\tdispatch(cityRequested());\r\n\tweatherService\r\n\t\t.getCityData()\r\n\t\t.then((data) => dispatch(cityLoaded(data)))\r\n\t\t.catch((err) => dispatch(cityError(err)));\r\n};\r\n\r\nconst myWeatherRequested = () => {\r\n\treturn {\r\n\t\ttype: 'FETCH_MY_WEATHER_REQUESTED',\r\n\t};\r\n};\r\n\r\nconst myWeatherLoaded = (myWeather) => {\r\n\treturn {\r\n\t\ttype: 'FETCH_MY_WEATHER_LOADED',\r\n\t\tpayload: myWeather,\r\n\t};\r\n};\r\n\r\nconst fetchMyWeather = (weatherService, dispatch) => () => {\r\n\tdispatch(myWeatherRequested());\r\n\tweatherService.getMyWeather().then((data) => dispatch(myWeatherLoaded(data)));\r\n};\r\n\r\nconst myWeatherRefresh = (newWeather) => {\r\n\treturn {\r\n\t\ttype: 'REFRESH_MY_WEATHER',\r\n\t\tpayload: newWeather,\r\n\t};\r\n};\r\n\r\nconst fetchMyWeatherRefresh = (weatherService, dispatch) => () => {\r\n\tdispatch(myWeatherRequested());\r\n\tweatherService.getMyWeather().then((data) => dispatch(myWeatherRefresh(data)));\r\n};\r\n\r\nexport { fetchCitis, cityAdded, cityDelete, fetchMyWeather, fetchMyWeatherRefresh };\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport {\r\n\tmakeStyles,\r\n\tCard,\r\n\tCardActions,\r\n\tCardContent,\r\n\tButton,\r\n\tTypography,\r\n\tBox,\r\n\tIconButton,\r\n} from '@material-ui/core';\r\n\r\nimport { withWeatherService } from '../hoc';\r\nimport { fetchMyWeather } from '../../actions';\r\nimport { compose } from '../../utils';\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tmaxWidth: 250,\r\n\t\tbackground:\r\n\t\t\t'linear-gradient(0deg, rgb(255 255 255 / 0%) 0%, #dcf9ffd4 50%, rgb(255 255 255 / 0%) 100%)',\r\n\t\tmargin: 'auto',\r\n\t\tboxShadow: 'none',\r\n\t\topacity: 0,\r\n\t\tanimation:\r\n\t\t\t'$slide-bottom-cd 0.6s cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.1s both',\r\n\t},\r\n\t'@keyframes slide-bottom-cd': {\r\n\t\t'0%': {\r\n\t\t\ttransform: 'translateY(-200px)',\r\n\t\t},\r\n\t\t'100%': {\r\n\t\t\ttransform: 'translateY(0px)',\r\n\t\t\topacity: 1,\r\n\t\t},\r\n\t},\r\n\tboxMinMaxTemp: {\r\n\t\twidth: '60%',\r\n\t},\r\n\ttypogrMinMaxTemp: {\r\n\t\tfontFamily: `'Merriweather', serif`,\r\n\t},\r\n\tbuttons: {\r\n\t\tpaddingTop: 0,\r\n\t\tjustifyContent: 'space-between',\r\n\t},\r\n\ttypogrTemp: {\r\n\t\tfontSize: 60,\r\n\t\t'@media (max-width:960px)': {\r\n\t\t\tfontSize: 45,\r\n\t\t},\r\n\t},\r\n\ttypogrCityName: {\r\n\t\tfontSize: 24,\r\n\t\t'@media (max-width:960px)': {\r\n\t\t\tfontSize: 20,\r\n\t\t},\r\n\t\tfontFamily: `'Roboto Slab', serif`,\r\n\t},\r\n});\r\n\r\nconst CityListItem = ({ cityData, deleteCityItem, fetchMyCityWeather }) => {\r\n\tconst { coord, name, t, feels_like, temp_min, temp_max, icon } = cityData;\r\n\tconst classes = useStyles();\r\n\r\n\tconst deleteItem = () => {\r\n\t\tconst localStArr = JSON.parse(localStorage.getItem('citisData'));\r\n\t\tconst newLocalStArr = localStArr.filter(\r\n\t\t\t(item) => item.id !== deleteCityItem().payload\r\n\t\t);\r\n\t\tlocalStorage.setItem('citisData', JSON.stringify(newLocalStArr));\r\n\t};\r\n\r\n\tconst sessionStoragePushitem = () => {\r\n\t\tconst sessionStData = {\r\n\t\t\t...coord,\r\n\t\t\tname: name,\r\n\t\t};\r\n\t\tsessionStorage.setItem('myCity', JSON.stringify(sessionStData));\r\n\t\tfetchMyCityWeather();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card className={classes.card}>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tdisplay='flex'\r\n\t\t\t\t\t\tjustifyContent='space-evenly'\r\n\t\t\t\t\t\talignItems='center'>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={`https://openweathermap.org/img/w/${icon}.png`}\r\n\t\t\t\t\t\t\talt='Icon current'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Typography className={classes.typogrTemp} variant='h2'>\r\n\t\t\t\t\t\t\t{t}&#8451;\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Typography className={classes.bg} variant='subtitle2'>\r\n\t\t\t\t\t\tFeels Like: {feels_like}&#8451;\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tclassName={classes.typogrCityName}\r\n\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\tcomponent='h1'>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Box\r\n\t\t\t\t\tdisplay='flex'\r\n\t\t\t\t\tjustifyContent='space-between'\r\n\t\t\t\t\tclassName={classes.boxMinMaxTemp}>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant='body2'\r\n\t\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\t\tclassName={classes.typogrMinMaxTemp}>\r\n\t\t\t\t\t\tmin: {temp_min}&#8451;\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant='body2'\r\n\t\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\t\tclassName={classes.typogrMinMaxTemp}>\r\n\t\t\t\t\t\tmax: {temp_max}&#8451;\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardActions className={classes.buttons}>\r\n\t\t\t\t<Link to='/cart' onClick={sessionStoragePushitem}>\r\n\t\t\t\t\t<Button size='small'>Detail inf...</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tonClick={deleteItem}\r\n\t\t\t\t\taria-label='delete'\r\n\t\t\t\t\tsize='small'>\r\n\t\t\t\t\t<HighlightOffIcon fontSize='small' />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nconst mapSrateToProps = ({ myCityWeather, loading }) => {\r\n\treturn { myCityWeather, loading };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { weatherService }) => {\r\n\treturn {\r\n\t\tfetchMyCityWeather: fetchMyWeather(weatherService, dispatch),\r\n\t};\r\n};\r\n\r\nexport default compose(\r\n\twithWeatherService(),\r\n\tconnect(mapSrateToProps, mapDispatchToProps)\r\n)(CityListItem);\r\n","import CityListItem from './city-list-item';\r\n\r\nexport default CityListItem;\r\n","import React from 'react';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport {\r\n\tcreateMuiTheme,\r\n\tThemeProvider,\r\n\tmakeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: '#ee9559',\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\t'& > * + *': {\r\n\t\t\tmarginTop: theme.spacing(2),\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nconst Spinner = () => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<LinearProgress color='primary' />\r\n\t\t\t</div>\r\n\t\t</ThemeProvider>\r\n\t);\r\n};\r\n\r\nexport default Spinner;\r\n","import Spinner from './spinner';\n\nexport default Spinner;\n","import React, { Component } from 'react';\r\nimport { TextField, Button, Box } from '@material-ui/core';\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\n\r\nimport { compose } from '../../utils';\r\nimport { cityAdded } from '../../actions';\r\nimport { withWeatherService } from '../hoc';\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: '#afafaf',\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst styles = {\r\n\tform: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n\tbox: {\r\n\t\twidth: '70%',\r\n\t},\r\n\tinput: {\r\n\t\twidth: '100%',\r\n\t\tmarginBottom: 5,\r\n\t\tfontFamily: `'Roboto Slab', serif`,\r\n\t},\r\n\tbutton: {\r\n\t\theight: 48,\r\n\t},\r\n\tspan: {\r\n\t\tpadding: 6,\r\n\t\tfontFamily: `'Roboto Slab', serif`,\r\n\t},\r\n};\r\nclass CityAddForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { address: '' };\r\n\t}\r\n\r\n\thandleChange = (address) => {\r\n\t\tthis.setState({ address });\r\n\t};\r\n\r\n\thandleSelect = (address) => {\r\n\t\tthis.setState({ address }, () => {\r\n\t\t\tthis.onClick();\r\n\t\t});\r\n\t};\r\n\r\n\tonClick = () => {\r\n\t\tthis.props.onAddedNewCiy(this.state.address);\r\n\t\tthis.setState({\r\n\t\t\taddress: '',\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\r\n\t\t\t<PlacesAutocomplete value={this.state.address} onChange={this.handleChange} onSelect={this.handleSelect}>\r\n\t\t\t\t{({ getInputProps, suggestions, getSuggestionItemProps }) => (\r\n\t\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t\t\t<form className={classes.form}>\r\n\t\t\t\t\t\t\t<Box className={classes.box}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t{...getInputProps()}\r\n\t\t\t\t\t\t\t\t\tlabel='You City'\r\n\t\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t{suggestions.map((suggestion) => {\r\n\t\t\t\t\t\t\t\t\t\tconst className = suggestion.active\r\n\t\t\t\t\t\t\t\t\t\t\t? 'suggestion-item--active'\r\n\t\t\t\t\t\t\t\t\t\t\t: 'suggestion-item';\r\n\t\t\t\t\t\t\t\t\t\tconst style = suggestion.active\r\n\t\t\t\t\t\t\t\t\t\t\t? { cursor: 'pointer', color: '#000000', fontSize: 17, transition: '0.2s' }\r\n\t\t\t\t\t\t\t\t\t\t\t: { cursor: 'pointer', color: '#7f7f7f', transition: '0.2s' };\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={suggestion.placeId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...getSuggestionItemProps(suggestion, {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle,\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className={classes.span}>{suggestion.description}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Button className={classes.button} onClick={this.onClick} size='small'>\r\n\t\t\t\t\t\t\t\tAdd City\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</ThemeProvider>\r\n\t\t\t\t)}\r\n\t\t\t</PlacesAutocomplete>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapSrateToProps = ({ city }) => {\r\n\treturn { city };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { weatherService }) => {\r\n\treturn {\r\n\t\tonAddedNewCiy: (item) => {\r\n\t\t\tweatherService.getCityItem(item).then((data) => dispatch(cityAdded(data)));\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default compose(\r\n\twithStyles(styles),\r\n\twithWeatherService(),\r\n\tconnect(mapSrateToProps, mapDispatchToProps)\r\n)(CityAddForm);\r\n","import CityAddForm from './city-add-form';\r\n\r\nexport default CityAddForm;","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\r\nimport CityAddForm from '../city-add-form';\r\n\r\nconst ErrorIndicator = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div> Error </div>\r\n\t\t\t<CityAddForm />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Grid, makeStyles } from '@material-ui/core';\r\n\r\nimport { compose } from '../../utils';\r\nimport CityListItem from '../city-list-item';\r\nimport { withWeatherService } from '../hoc';\r\nimport { fetchCitis, cityDelete } from '../../actions';\r\nimport Spinner from '../spinner';\r\nimport CityAddForm from '../city-add-form';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nconst useStyles = makeStyles({\r\n\tgridCont: {\r\n\t\twidth: '100%',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n});\r\n\r\nconst CityList = ({ city, deleteCityItem }) => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Grid container spacing={2} className={classes.gridCont}>\r\n\t\t\t{city.map((cityData) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Grid key={cityData.id} item xs={6} sm={3} lg={2}>\r\n\t\t\t\t\t\t<CityListItem cityData={cityData} deleteCityItem={() => deleteCityItem(cityData.id)} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t<Grid style={{ padding: 20 }} item xs={12}>\r\n\t\t\t\t<CityAddForm />\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\nclass CityListContainer extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.fetchCityFun();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { city, loading, error, deleteCityItem } = this.props;\r\n\r\n\t\tif (loading) {\r\n\t\t\treturn <Spinner />;\r\n\t\t}\r\n\r\n\t\tif (error) {\r\n\t\t\treturn <ErrorIndicator />;\r\n\t\t}\r\n\r\n\t\treturn <CityList city={city} deleteCityItem={deleteCityItem} />;\r\n\t}\r\n}\r\n\r\nconst mapSrateToProps = ({ city, loading, error }) => {\r\n\treturn { city, loading, error };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { weatherService }) => {\r\n\treturn {\r\n\t\tfetchCityFun: fetchCitis(weatherService, dispatch),\r\n\t\tdeleteCityItem: (id) => dispatch(cityDelete(id)),\r\n\t};\r\n};\r\n\r\nexport default compose(withWeatherService(), connect(mapSrateToProps, mapDispatchToProps))(CityListContainer);\r\n","import CityList from './city-list';\r\n\r\nexport default CityList;\r\n","import React from 'react';\r\nimport CityList from '../city-list';\r\n\r\nconst HomePege = () => {\r\n\treturn <CityList />;\r\n};\r\n\r\nexport default HomePege;\r\n","export default __webpack_public_path__ + \"static/media/Humidity.901294ef.svg\";","export default __webpack_public_path__ + \"static/media/Pressure.1b227373.svg\";","export default __webpack_public_path__ + \"static/media/Wind.dcd40907.svg\";","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\n\r\nimport Humidity from '../../assets/icons/Humidity.svg';\r\nimport Pressure from '../../assets/icons/Pressure.svg';\r\nimport Wind from '../../assets/icons/Wind.svg';\r\n\r\nconst useStyles = makeStyles({\r\n\tbox: {\r\n\t\tpadding: '.5rem 2rem',\r\n\t\tbackground:\r\n\t\t\t'linear-gradient(0deg, rgb(255 255 255 / 0%) 0%, #ffffff70 50%, rgb(255 255 255 / 0%) 100%)',\r\n\t},\r\n\ticon: {\r\n\t\twidth: 25,\r\n\t},\r\n\thr: {\r\n\t\theight: 100,\r\n\t\tborderColor: '#08080847',\r\n\t},\r\n\tfontTypogr: {\r\n\t\tfontFamily: `'Merriweather', serif`,\r\n\t},\r\n});\r\n\r\nconst MyCityCurrent = ({ current }) => {\r\n\tconst classes = useStyles();\r\n\tconst {\r\n\t\tfeels_like,\r\n\t\thumidity,\r\n\t\tpressure,\r\n\t\ttemp,\r\n\t\tweather: [iconData],\r\n\t\twind_speed,\r\n\t} = current;\r\n\r\n\treturn (\r\n\t\t<Box className={classes.box}>\r\n\t\t\t<Box\r\n\t\t\t\tdisplay='flex'\r\n\t\t\t\tjustifyContent='space-between'\r\n\t\t\t\talignItems='center'>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={`https://openweathermap.org/img/w/${iconData.icon}.png`}\r\n\t\t\t\t\talt={iconData.description}\r\n\t\t\t\t/>\r\n\t\t\t\t<Typography variant='h2'>{Math.trunc(temp)}&#8451;</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Box\r\n\t\t\t\tdisplay='flex'\r\n\t\t\t\tjustifyContent='space-between'\r\n\t\t\t\talignItems='center'\r\n\t\t\t\tmarginBottom='3rem'>\r\n\t\t\t\t<Typography className={classes.fontTypogr} variant='subtitle2'>\r\n\t\t\t\t\t{iconData.main}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography className={classes.fontTypogr} variant='subtitle2'>\r\n\t\t\t\t\tFeels Like: {Math.trunc(feels_like)}&#8451;\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Box\r\n\t\t\t\tdisplay='flex'\r\n\t\t\t\tjustifyContent='space-between'\r\n\t\t\t\talignItems='center'>\r\n\t\t\t\t<Box textAlign='center'>\r\n\t\t\t\t\t<img src={Wind} alt='Wind' className={classes.icon} />\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tclassName={classes.fontTypogr}\r\n\t\t\t\t\t\tvariant='subtitle2'>\r\n\t\t\t\t\t\t{wind_speed}m/s\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<hr className={classes.hr} />\r\n\t\t\t\t<Box textAlign='center'>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={Pressure}\r\n\t\t\t\t\t\talt='Pressure'\r\n\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tclassName={classes.fontTypogr}\r\n\t\t\t\t\t\tvariant='subtitle2'>\r\n\t\t\t\t\t\t{pressure}hPa\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<hr className={classes.hr} />\r\n\t\t\t\t<Box textAlign='center'>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={Humidity}\r\n\t\t\t\t\t\talt='Humidity'\r\n\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tclassName={classes.fontTypogr}\r\n\t\t\t\t\t\tvariant='subtitle2'>\r\n\t\t\t\t\t\t{humidity}%\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default MyCityCurrent;\r\n","import MyCityCurrent from './my-city-current';\r\n\r\nexport default MyCityCurrent;","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n\tboxCont: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\toverflowX: 'auto',\r\n\t\theight: 170,\r\n\t\twidth: '90%',\r\n\t\tboxShadow: 'inset 0px 0px 50px 30px #dcf9ff00',\r\n\t\tbackground: '#ffffff3b',\r\n\t},\r\n\tbox: {\r\n\t\tpadding: '.3rem',\r\n\t\ttextAlign: 'center',\r\n\t\topacity: 0,\r\n\t\tmargin: '.2rem',\r\n\t\tboxShadow: '0 -1px 6px 0 rgba(0,0,0,0.12)',\r\n\t\tbackground:\r\n\t\t\t'linear-gradient(0deg, rgb(255 255 255 / 0%) 0%, #ddf9ffc7 50%, rgb(255 255 255 / 0%) 100%)',\r\n\t\tanimation:\r\n\t\t\t'$rotate-vert-center-h 0.6s cubic-bezier(0.550, 0.055, 0.675, 0.190) 0.6s both',\r\n\t},\r\n\t'@keyframes rotate-vert-center-h': {\r\n\t\t'0%': {\r\n\t\t\ttransform: 'rotateY(0)',\r\n\t\t},\r\n\t\t'100%': {\r\n\t\t\ttransform: 'rotateY(360deg)',\r\n\t\t\topacity: 1,\r\n\t\t},\r\n\t},\r\n\ttypogrTemp: {\r\n\t\tfontFamily: `'Merriweather', serif`,\r\n\t\tmarginBottom: 10,\r\n\t},\r\n\ttypogrTime: {\r\n\t\tfontFamily: `'Merriweather', serif`,\r\n\t},\r\n});\r\n\r\nconst MyCityHourly = ({ hourly }) => {\r\n\tconst classes = useStyles();\r\n\tconst data24 = hourly.slice(0, 24);\r\n\treturn (\r\n\t\t<Box className={classes.boxCont}>\r\n\t\t\t{data24.map((hourlyData, index) => {\r\n\t\t\t\tconst fullDate = new Date(hourlyData.dt * 1000);\r\n\t\t\t\tconst hours =\r\n\t\t\t\t\t(fullDate.getHours() < 10 ? '0' : '') + fullDate.getHours();\r\n\t\t\t\tconst minutes = fullDate.getMinutes() + '0';\r\n\t\t\t\tconst currentTime = `${hours}:${minutes}`;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttransform: `scaleY(-1) translateY(${hourlyData.temp}px)`,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={classes.box}>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant='subtitle2'\r\n\t\t\t\t\t\t\tclassName={classes.typogrTemp}>\r\n\t\t\t\t\t\t\t{Math.trunc(hourlyData.temp)}&deg;\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant='subtitle2'\r\n\t\t\t\t\t\t\tclassName={classes.typogrTime}>\r\n\t\t\t\t\t\t\t{currentTime}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default MyCityHourly;\r\n","import MyCityHourly from './my-city-hourly';\r\n\r\nexport default MyCityHourly;\r\n","import React from 'react';\r\nimport { Box, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles({\r\n\tgridItem: {\r\n\t\tjustifyContent: 'center',\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tcard: {\r\n\t\tbackground:\r\n\t\t\t'linear-gradient(0deg, rgb(255 255 255 / 0%) 0%, #fff0c79e 50%, rgb(255 255 255 / 0%) 100%)',\r\n\t\tflexDirection: 'column',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '.3rem .2rem',\r\n\t\twidth: 120,\r\n\t\tborderRadius: 0,\r\n\t\topacity: 0,\r\n\t\tanimation:\r\n\t\t\t'$rotate-vert-center-d 0.6s cubic-bezier(0.550, 0.055, 0.675, 0.190) 1.2s both',\r\n\t},\r\n\t'@keyframes rotate-vert-center-d': {\r\n\t\t'0%': {\r\n\t\t\ttransform: 'rotateY(0)',\r\n\t\t},\r\n\t\t'100%': {\r\n\t\t\ttransform: 'rotateY(360deg)',\r\n\t\t\topacity: 1,\r\n\t\t},\r\n\t},\r\n\ttypography: {\r\n\t\tfontFamily: `'Merriweather', serif`,\r\n\t\tfontSize: '1rem',\r\n\t\tfontWeight: 'bold',\r\n\t},\r\n\ttypogrDescr: {\r\n\t\tfontFamily: `'Roboto Slab', serif`,\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: '.9rem',\r\n\t},\r\n});\r\n\r\nconst MyCityDaily = ({ daily }) => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Grid container spacing={1} justify='center'>\r\n\t\t\t{daily.map((dailyWeather, index) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tdt,\r\n\t\t\t\t\ttemp,\r\n\t\t\t\t\tweather: [iconData],\r\n\t\t\t\t} = dailyWeather;\r\n\t\t\t\tconst fullDate = new Date(dt * 1000);\r\n\t\t\t\tconst month =\r\n\t\t\t\t\t(fullDate.getMonth() + 1 < 10 ? '0' : '') +\r\n\t\t\t\t\t(fullDate.getMonth() + 1);\r\n\t\t\t\tconst date =\r\n\t\t\t\t\t(fullDate.getDate() < 10 ? '0' : '') + fullDate.getDate();\r\n\t\t\t\tconst currentDate = `${date}.${month}`;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\txs={6}\r\n\t\t\t\t\t\tsm={3}\r\n\t\t\t\t\t\tlg={2}\r\n\t\t\t\t\t\tclassName={classes.gridItem}>\r\n\t\t\t\t\t\t<Card className={classes.card}>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant='subtitle2'\r\n\t\t\t\t\t\t\t\tcomponent='h3'\r\n\t\t\t\t\t\t\t\tclassName={classes.typography}>\r\n\t\t\t\t\t\t\t\t{currentDate}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={`https://openweathermap.org/img/w/${iconData.icon}.png`}\r\n\t\t\t\t\t\t\t\talt={iconData.description}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant='caption'\r\n\t\t\t\t\t\t\t\tcomponent='h2'\r\n\t\t\t\t\t\t\t\tclassName={classes.typogrDescr}>\r\n\t\t\t\t\t\t\t\t{iconData.description}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Box display='flex'>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant='subtitle2'\r\n\t\t\t\t\t\t\t\t\tclassName={classes.typography}>\r\n\t\t\t\t\t\t\t\t\t{Math.trunc(temp.morn)}&deg;/\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant='subtitle2'\r\n\t\t\t\t\t\t\t\t\tcolor='textSecondary'\r\n\t\t\t\t\t\t\t\t\tclassName={classes.typography}>\r\n\t\t\t\t\t\t\t\t\t{Math.trunc(temp.night)}&deg;\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default MyCityDaily;\r\n","import MyCityDaily from './my-city-daily';\r\n\r\nexport default MyCityDaily;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography, IconButton } from '@material-ui/core';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\n\r\nconst useStyles = makeStyles({\r\n\tbox: {\r\n\t\tpadding: '1rem 1.5rem .5rem',\r\n\t\tfontFamily: `'Merriweather', serif`,\r\n\t},\r\n\th2: {\r\n\t\tfontFamily: `'Roboto Slab', serif`,\r\n\t},\r\n});\r\n\r\nconst MyCityHeader = ({ dt, onRefresh }) => {\r\n\tconst classes = useStyles();\r\n\tconst myCityName = JSON.parse(sessionStorage.getItem('myCity'));\r\n\tconst fullDate = new Date(dt * 1000);\r\n\tconst month = (fullDate.getMonth() + 1 < 10 ? '0' : '') + (fullDate.getMonth() + 1);\r\n\tconst date = (fullDate.getDate() < 10 ? '0' : '') + fullDate.getDate();\r\n\tconst currentDate = `${date}.${month}`;\r\n\treturn (\r\n\t\t<Box display='flex' justifyContent='space-between' alignItems='end' className={classes.box}>\r\n\t\t\t<Box display='flex' flexDirection='column' alignItems='end'>\r\n\t\t\t\t<IconButton aria-label='refresh' size='small' onClick={onRefresh}>\r\n\t\t\t\t\t<AutorenewIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t{currentDate}\r\n\t\t\t</Box>\r\n\t\t\t<Typography variant='h3' component='h1' className={classes.h2}>\r\n\t\t\t\t{myCityName.name}\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default MyCityHeader;\r\n","import MyCityHeader from './my-city-header';\r\n\r\nexport default MyCityHeader;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Grid, withStyles } from '@material-ui/core';\r\n\r\nimport { compose } from '../../utils';\r\nimport { withWeatherService } from '../hoc';\r\nimport { fetchMyWeather, fetchMyWeatherRefresh } from '../../actions';\r\nimport Spinner from '../spinner';\r\nimport MyCityCurrent from '../my-city-current';\r\nimport MyCityHourly from '../my-city-hourly';\r\nimport MyCityDaily from '../my-city-daily';\r\nimport MyCityHeader from '../my-city-header';\r\n\r\nconst styles = {\r\n\tgridContainer: {\r\n\t\theight: '100vh',\r\n\t},\r\n\tgridItem1: {\r\n\t\tpadding: '2rem',\r\n\t\topacity: 0,\r\n\t\tanimation:\r\n\t\t\t'$slide-bottom-cn 0.6s cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.1s both',\r\n\t},\r\n\t'@keyframes slide-bottom-cn': {\r\n\t\t'0%': {\r\n\t\t\ttransform: 'translateY(-200px)',\r\n\t\t},\r\n\t\t'100%': {\r\n\t\t\ttransform: 'translateY(0px)',\r\n\t\t\topacity: 1,\r\n\t\t},\r\n\t},\r\n\tgridItem2: {\r\n\t\tpadding: '3rem 2rem',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\thr: {\r\n\t\twidth: '100%',\r\n\t\tmargin: '2rem 0',\r\n\t\tborderColor: '#08080847',\r\n\t},\r\n};\r\n\r\nclass MyCityContainer extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.fetchMyCityWeather();\r\n\t\tthis.props.onRefresh();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { myWeather, loading, classes, onRefresh } = this.props;\r\n\t\tconst { daily, hourly, current } = myWeather;\r\n\r\n\t\tif (loading) {\r\n\t\t\treturn <Spinner />;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Grid container className={classes.gridContainer}>\r\n\t\t\t\t<Grid item xs={12} md={4} className={classes.gridItem1}>\r\n\t\t\t\t\t<MyCityHeader\r\n\t\t\t\t\t\tdt={current.dt}\r\n\t\t\t\t\t\tonRefresh={() => onRefresh()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<hr className={classes.hr} />\r\n\t\t\t\t\t<MyCityCurrent current={current} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} md={8} className={classes.gridItem2}>\r\n\t\t\t\t\t<MyCityHourly hourly={hourly} />\r\n\t\t\t\t\t<hr className={classes.hr} />\r\n\t\t\t\t\t<MyCityDaily daily={daily} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapSrateToProps = ({ myWeather, loading }) => {\r\n\treturn { myWeather, loading };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { weatherService }) => {\r\n\treturn {\r\n\t\tfetchMyCityWeather: fetchMyWeather(weatherService, dispatch),\r\n\t\tonRefresh: fetchMyWeatherRefresh(weatherService, dispatch),\r\n\t};\r\n};\r\n\r\nexport default compose(\r\n\twithStyles(styles),\r\n\twithWeatherService(),\r\n\tconnect(mapSrateToProps, mapDispatchToProps)\r\n)(MyCityContainer);\r\n","import MyCityContainer from './my-city-container';\r\n\r\nexport default MyCityContainer;","import React from 'react';\r\nimport MyCityContainer from '../my-city-container';\r\n\r\nconst CartPage = () => {\r\n\treturn <MyCityContainer />;\r\n};\r\n\r\nexport default CartPage;\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { HomePege, CartPage } from '../pages';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path='/' component={HomePege} exact />\r\n\t\t\t<Route path='/cart' component={CartPage} />\r\n\t\t</Switch>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\nclass ErroBoundry extends Component {\r\n\tstate = {\r\n\t\thasError: false,\r\n\t};\r\n\r\n\tcomponentDidCatch() {\r\n\t\tthis.setState({\r\n\t\t\thasError: true,\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <ErrorIndicator />;\r\n\t\t}\r\n\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErroBoundry;\r\n","class WeatherService {\r\n\tasync getMyWeather() {\r\n\t\tconst SH_ST = JSON.parse(sessionStorage.getItem('myCity'));\r\n\t\tconst URL = `https://api.openweathermap.org/data/2.5/onecall?lat=${SH_ST.lat}&lon=${SH_ST.lon}&exclude=minutely,alerts&appid=9db1d496a91bad902ebeff185ff91bdf&units=metric`;\r\n\t\tconst response = await fetch(URL);\r\n\t\tconst data = await response.json();\r\n\t\treturn data;\r\n\t}\r\n\r\n\tasync getCityItem(newCityItem) {\r\n\t\ttry {\r\n\t\t\tconst citisArray = localStorage.getItem('citisData') ? JSON.parse(localStorage.getItem('citisData')) : [];\r\n\t\t\tconst API_KAY = '9db1d496a91bad902ebeff185ff91bdf';\r\n\t\t\tconst cityValue = newCityItem.split(',')[0];\r\n\t\t\tconst URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityValue}&appid=${API_KAY}&units=metric`;\r\n\t\t\tconst response = await fetch(URL);\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst {\r\n\t\t\t\tcoord,\r\n\t\t\t\tid,\r\n\t\t\t\tname,\r\n\t\t\t\tmain: { feels_like, temp, temp_max, temp_min },\r\n\t\t\t\tweather: [iconData],\r\n\t\t\t} = await data;\r\n\t\t\tconst cityWeather = await {\r\n\t\t\t\tcoord,\r\n\t\t\t\tid: id,\r\n\t\t\t\tname: name,\r\n\t\t\t\tt: Math.trunc(temp),\r\n\t\t\t\tfeels_like: Math.trunc(feels_like),\r\n\t\t\t\ttemp_min: Math.trunc(temp_min),\r\n\t\t\t\ttemp_max: Math.trunc(temp_max),\r\n\t\t\t\ticon: iconData.icon,\r\n\t\t\t};\r\n\t\t\tawait citisArray.push({\r\n\t\t\t\tid: cityWeather.id,\r\n\t\t\t\tname: cityWeather.name,\r\n\t\t\t});\r\n\t\t\tlocalStorage.setItem('citisData', JSON.stringify(citisArray));\r\n\r\n\t\t\treturn cityWeather;\r\n\t\t} catch (err) {\r\n\t\t\tconst error = new Error('No data for your city! Check if the entry is correct.');\r\n\t\t\talert(error.message);\r\n\t\t}\r\n\t}\r\n\r\n\tgetCityData() {\r\n\t\tconst arr = [];\r\n\r\n\t\tif (localStorage.getItem('citisData')) {\r\n\t\t\tconst citisArray = JSON.parse(localStorage.getItem('citisData'));\r\n\t\t\tcitisArray.map((item) => {\r\n\t\t\t\tconst API_KAY = '9db1d496a91bad902ebeff185ff91bdf';\r\n\t\t\t\tconst URL = `https://api.openweathermap.org/data/2.5/weather?q=${item.name}&appid=${API_KAY}&units=metric`;\r\n\t\t\t\tfetch(URL)\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tif (response.status !== 200) {\r\n\t\t\t\t\t\t\tthrow new Error('Something wrong! Reload the page.');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn response.json();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((data) => {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tcoord,\r\n\t\t\t\t\t\t\tid,\r\n\t\t\t\t\t\t\tname,\r\n\t\t\t\t\t\t\tmain: { feels_like, temp, temp_max, temp_min },\r\n\t\t\t\t\t\t\tweather: [iconData],\r\n\t\t\t\t\t\t} = data;\r\n\t\t\t\t\t\tconst cityWeather = {\r\n\t\t\t\t\t\t\tcoord,\r\n\t\t\t\t\t\t\tid,\r\n\t\t\t\t\t\t\tname,\r\n\t\t\t\t\t\t\tt: Math.trunc(temp),\r\n\t\t\t\t\t\t\tfeels_like: Math.trunc(feels_like),\r\n\t\t\t\t\t\t\ttemp_min: Math.trunc(temp_min),\r\n\t\t\t\t\t\t\ttemp_max: Math.trunc(temp_max),\r\n\t\t\t\t\t\t\ticon: iconData.icon,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tarr.push(cityWeather);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tif (err.message === 'Something wrong! Reload the page.') {\r\n\t\t\t\t\t\t\talert(err.message);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthrow err;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tresolve(arr);\r\n\t\t\t\t} catch {\r\n\t\t\t\t\treject(new Error('Something wrong!!!'));\r\n\t\t\t\t}\r\n\t\t\t}, 700);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default WeatherService;\r\n","const initialState = {\r\n\tcity: [],\r\n\tloading: true,\r\n\terror: null,\r\n\tmyWeather: {},\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'FETCH_CITY_REQUESTED':\r\n\t\t\treturn {\r\n\t\t\t\tcity: [],\r\n\t\t\t\tloading: true,\r\n\t\t\t\terror: null,\r\n\t\t\t\tmyCityWeather: {},\r\n\t\t\t};\r\n\t\tcase 'FETCH_CITY_LOADED':\r\n\t\t\treturn {\r\n\t\t\t\tcity: action.payload,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: null,\r\n\t\t\t\tmyCityWeather: {},\r\n\t\t\t};\r\n\t\tcase 'FETCH_CITY_FAILURE':\r\n\t\t\treturn {\r\n\t\t\t\tcity: [],\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t\tmyCityWeather: {},\r\n\t\t\t};\r\n\t\tcase 'ADD_TO_CITY_LIST':\r\n\t\t\tconst newCityItem = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcity: [...state.city, newCityItem],\r\n\t\t\t};\r\n\t\tcase 'DELETE_ON_CITY_LIST':\r\n\t\t\tconst eventId = action.payload;\r\n\t\t\tconst newArr = state.city.filter((item) => item.id !== eventId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcity: newArr,\r\n\t\t\t};\r\n\t\tcase 'FETCH_MY_WEATHER_REQUESTED':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t\tmyWeather: {},\r\n\t\t\t};\r\n\t\tcase 'FETCH_MY_WEATHER_LOADED':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tmyWeather: action.payload,\r\n\t\t\t};\r\n\t\tcase 'REFRESH_MY_WEATHER':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tmyWeather: action.payload,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport WeatherService from './services/weather-service';\nimport { WeatherServiceProvider } from './components/weather-service-context';\n\nimport store from './store';\nimport './index.css';\n\nconst weatherService = new WeatherService();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<ErrorBoundry>\n\t\t\t<WeatherServiceProvider value={weatherService}>\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<App />\n\t\t\t\t</HashRouter>\n\t\t\t</WeatherServiceProvider>\n\t\t</ErrorBoundry>\n\t</Provider>,\n\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}